<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dogtiger.challus.repository.NoticeMapper">

    <resultMap id="noticeMap" type="com.dogtiger.challus.entity.Notice">
        <id property="noticeId" column="notice_id" />
        <result property="noticeTitle" column="notice_title" />
        <result property="noticeContent" column="notice_content" />
        <result property="userId" column="user_id" />
        <result property="noticeDate" column="notice_date" />
        <association property="user" resultMap="userMap" />
    </resultMap>

    <resultMap id="userMap" type="com.dogtiger.challus.entity.User">
        <id property="userId" column="user_id" />
        <result property="email" column="email" />
        <result property="name" column="name" />
        <result property="phone" column="phone" />
        <result property="nickname" column="nickname" />
        <result property="password" column="password" />
        <result property="point" column="point" />
        <result property="intro" column="intro" />
        <result property="membership" column="membership" />
        <result property="isAdmin" column="is_admin" />
        <result property="oauth2Id" column="oauth2_id" />
        <result property="profileUrl" column="profile_url" />
        <result property="enabled" column="enabled" />
    </resultMap>

    <insert id="saveNotice" useGeneratedKeys="true" keyProperty="noticeId">
        insert into notice_tb
        values(0, #{noticeTitle}, #{noticeContent}, #{userId}, now())
    </insert>

    <select id="getNoticeList" resultMap="noticeMap">
        select
            nt.notice_id,
            nt.notice_title,
            ut.nickname,
            nt.notice_date
        from
            notice_tb nt
            left outer join user_tb ut on(ut.user_id = nt.user_id)
        where
            1=1
        order by
            notice_id desc
            limit #{index}, #{pageSize}
    </select>

    <select id="getNoticesCount" resultType="java.lang.Integer">
        select
            count(*)
        from
            notice_tb;
    </select>

    <select id="getNoticeByNoticeId" resultMap="noticeMap">
        select
            nt.notice_id,
            nt.notice_title,
            nt.notice_content,
            ut.nickname,
            nt.notice_date
        from
            notice_tb nt
            left outer join user_tb ut on(ut.user_id = nt.user_id)
        where
            nt.notice_id = #{noticeId}
    </select>

    <delete id="deleteNotice" parameterType="hashmap">
        delete
        from
            notice_tb
        where
            notice_id = #{noticeId}
    </delete>

    <update id="updateNotice">
        update notice_tb
        set
            notice_title = #{noticeTitle},
            notice_content = #{noticeContent}
        where
            notice_id = #{noticeId}
    </update>

</mapper>
