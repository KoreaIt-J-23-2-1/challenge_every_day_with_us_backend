<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dogtiger.challus.repository.ChallengeMapper">
    <resultMap id="challengeMap" type="com.dogtiger.challus.entity.Challenge">
        <id property="challengeId" column="challenge_id" />
        <result property="userId" column="user_id" />
        <result property="challengeName" column="challenge_name" />
        <result property="introduction" column="challenge_introduction" />
        <result property="isOpen" column="is_open" />
        <result property="isApplicable" column="is_applicable" />
        <result property="startDate" column="start_date" />
        <result property="endDate" column="end_date" />
        <result property="categoryName" column="category_name" />
    </resultMap>

    <insert id="saveChallenge" parameterType="com.dogtiger.challus.entity.Challenge">
        insert into challenge_tb
        values (
        0, #{userId}, #{challengeName}, #{layout}, #{introduction},
        <choose>
            <when test="isOpen.equals('true')">
                1
            </when>
            <otherwise>
                0
            </otherwise>
        </choose>,
        <choose>
            <when test="isApplicable.equals('true')">
                1
            </when>
            <otherwise>
                0
            </otherwise>
        </choose>,
        #{startDate}, #{endDate}, #{categoryName}
        )
    </insert>

    <select id="getChallengeByChallengeId" resultMap="challengeMap">
        select
            ct.challenge_id,
            ct.user_id,
            ct.challenge_name,
            ct.challenge_introduction,
            ct.is_open,
            ct.is_applicable,
            ct.start_date,
            ct.end_date,
            ct.category_name,
            ut.name
        from
            challenge_tb ct
            left outer join user_tb ut on(ut.user_id = ct.user_id)
        where
            ct.challenge_id = #{challengeId}
    </select>

    <select id="getChallengeList" resultMap="challengeMap" parameterType="hashmap">
        select
            ct.challenge_id,
            ct.challenge_name,
            ct.category_name,
            ct.start_date,
            ct.challenge_like_count
        from
            challenge_tb ct
            left outer join user_tb ut on(ut.user_id = ct.user_id)
        where
            1 = 1
            <choose>
                <when test="optionName.equals('전체')">
                    and ct.challenge_name like concat("%", #{searchValue}, "%")
                    or ct.category_name like concat("%", #{searchValue}, "%")
                </when>
                <when test="optionName.equals('챌린지제목')">
                    and ct.challenge_name like concat("%", #{searchValue}, "%")
                </when>
                <when test="optionName.equals('카테고리이름')">
                    and ct.category_name like concat("%", #{searchValue}, "%")
                </when>
            </choose>
        order by
            challenge_id desc
        limit #{index}, 10
    </select>
    <select id="getChallengeCount" resultType="java.lang.Integer">
        select
            count(*)
        from
            challenge_tb ct
            left outer join user_tb ut on(ut.user_id = ct.user_id)
        where
            1 = 1
            <choose>
                <when test="optionName.equals('전체')">
                    and ct.challenge_name like concat("%", #{searchValue}, "%")
                    or ct.category_name like concat("%", #{searchValue}, "%")
                </when>
                <when test="optionName.equals('챌린지제목')">
                    and ct.challenge_name like concat("%", #{searchValue}, "%")
                </when>
                <when test="optionName.equals('카테고리이름')">
                    and ct.category_name like concat("%", #{searchValue}, "%")
                </when>
            </choose>
    </select>

</mapper>